#include <stdio.h>
#include <windows.h>
#include <conio.h>
#include <math.h>
#include <time.h>
void gotoxy(int x, int y){
	COORD Pos = {x,y};
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),Pos);
}
int main(){
	system("mode con cols=50 lines=25 | title=GAME");
	int j=0,my=23,px=24,py=23,lv2=0,lv3=0,com=0,prac=0,pau=0,det=0,fturn=0;
	int obx[1000]={6,24,},oby[1000]={23,20,},tech[3]={2,2,8};
	int lv=1,res=0,blx[1000]={24,22,18,16,18,16,18,20,22,14},bly[1000]={21,21,19,19,17,14,13,13,13,14},techb[3]={10,10,11},cn=0,cy=0,d=0,tg=0;
	int fx[10]={24,22},fy[10]={17,17},techf[3]={2,2,3};
	int itx[1000]={12,14},ity[1000]={20,17},techi[3]={0,0,2},eat=0,jcs=0;
	int bl1x[10]={24,26,26,28,30,32,24,22,28,26},bl1y[10]={21,21,18,18,18,16,18,18,14,14},ob1x[2]={28,26},ob1y[2]={17,20},f1x[2]={24,22},f1y[2]={11,11}; //2단계 레벨 데이터 
	int bl2x[11]={10,12,2,4,6,8,6,4,2,16,18},bl2y[11]={22,22,21,21,21,16,16,16,14,16,16},ob2x[8]={4,10,12,18,12,14,16,18},ob2y[8]={15,21,21,15,23,23,23,23},f2x[3]={4,6,8},f2y[3]={11,11,11}; //3단계 레벨 데이터  
	int make=0,g=0,spike=0,block=0,finish=0,mkx,mky,turn=0,undo=0,tut=0,poss=0; //맵 제작 
	int gx[1000]={0,},gy[1000]={0,},techg[1]={0},grav=0,mgrav=0,gc=0,gb=0; 
	char c,vol,ram='q',detch,ha[1000],item=0;
	float t=0;
	while(ram!='c' && ram!='p' && ram!='m'){
		printf("연습 모드: p, 일반: c, 제작 모드: m\n셋 중 하나를 입력해주세요.\n"); 
		scanf("%c",&ram);
		if(ram!='c' && ram!='p'){
			if(ram!='m'){
				printf("다시 입력해주세요.");
				Sleep(500);
				system("cls"); 
			}
		}
	}
	system("cls");
	if(ram=='m') make=1;
	if(ram=='p') prac=1;
	else prac=0;
	if(make==1){
		for(int i=0;i<techb[lv-1];i++){
			blx[i]=0;
			bly[i]=0;
		}
		for(int i=0;i<tech[lv-1];i++){
			obx[i]=0;
			oby[i]=0;
		}
		for(int i=0;i<techf[lv-1];i++){
			fx[i]=0;
			fy[i]=0;
		}
		for(int i=0;i<techi[lv-1];i++){
			itx[i]=0;
			ity[i]=0;
		}
		tech[0]=0;
		techb[0]=0;
		techf[0]=0;
		techi[0]=0;
		system("cls");
		prac=1;
	}
	else{
		gotoxy(0,0);
		printf("a,d로 좌우로 움직이고,\n스페이스바로 점프할 수 있습니다.");
		Sleep(1000);
	}
	while(1){
		if(make==1 && g==0){
			system("cls");
			if(poss==1){
				gotoxy(20,0);
				printf("Verified");
			}
			for(int i=0;i<techb[lv-1];i++){
				gotoxy(blx[i],bly[i]);
				printf("□");
			}
			for(int i=0;i<tech[lv-1];i++){
				gotoxy(obx[i],oby[i]);
				printf("△");
			}
			for(int i=0;i<techf[lv-1];i++){  
				gotoxy(fx[i],fy[i]);
				printf("▣");
			} 
			for(int i=0;i<techi[lv-1];i++){  
				gotoxy(itx[i],ity[i]);
				printf("◎");
			} 
			for(int i=0;i<techg[lv-1];i++){  
				gotoxy(gx[i],gy[i]);
				printf("◇");
			} 
			while(g==0){
				if(tut==0){
					gotoxy(0,0);
					printf("가시 설치: t, 길 설치: b, 도착지 설치: f,\n아이템 설치:i, 중력반전 설치:s,\n되돌리기: r,테스트: g\n");
					printf("길의 옆면은 판정이 없습니다."); 
				}
				if(kbhit()){
					system("cls");
					if(poss==1){
						gotoxy(20,0);
						printf("Verified");
					}
					tut=1;
					for(int i=0;i<techb[lv-1];i++){
					gotoxy(blx[i],bly[i]);
					printf("□");
					}
					for(int i=0;i<tech[lv-1];i++){
					gotoxy(obx[i],oby[i]);
					printf("△");
					}
					for(int i=0;i<techf[lv-1];i++){  
						gotoxy(fx[i],fy[i]);
						printf("▣");
					} 
					for(int i=0;i<techg[lv-1];i++){  
						gotoxy(gx[i],gy[i]);
						printf("◇");
					} 
					for(int i=0;i<=23;i+=2){
					gotoxy(0,i);
					printf("%d",i);
					}
					for(int i=0;2*i<=48;i+=2){
						gotoxy(i*2,24);
						printf("%d",i);
					}
					c=getch();
					switch(c){
						case 't': spike=1; poss=0; break;
						case 'b': block=1; poss=0; break;
						case 'f': finish=1; poss=0; break;
						case 'r': undo=1; break;
						case 'i': item=1; break;
						case 'g': g=1; grav=0; break;
						case 's': mgrav=1; break;
						default: break;
					}
					if(g==1){
						px=24;
						py=23;
						break;
					}
					if(spike==1){
						turn++;
						ha[turn]='t';
						tech[0]++;
						spike=0;
						printf("가시를 설치할 좌표를 입력해주세요.\n=> ");
						scanf("%d %d",&mkx,&mky);
						obx[tech[0]-1]=mkx*2;
						oby[tech[0]-1]=mky;
					}
					else if(block==1){
						turn++;
						ha[turn]='b';
						techb[0]++;
						block=0;
						printf("길을 설치할 좌표를 입력해주세요. \n(y좌표가 23 이하여야 판정이 생깁니다)\n=> ");
						scanf("%d %d",&mkx,&mky);
						blx[techb[0]-1]=mkx*2;
						bly[techb[0]-1]=mky;
					}
					else if(finish==1){
						turn++;
						ha[turn]='f';
						techf[0]++;
						finish=0;
						printf("도착지를 설치할 좌표를 입력해주세요.\n=> ");
						scanf("%d %d",&mkx,&mky);
						fx[techf[0]-1]=mkx*2;
						fy[techf[0]-1]=mky;
					}
					else if(item==1){
						turn++;
						ha[turn]='i';
						techi[0]++;
						item=0;
						printf("아이템을 설치할 좌표를 입력해주세요.\n=> ");
						scanf("%d %d",&mkx,&mky);
						itx[techi[0]-1]=mkx*2;
						ity[techi[0]-1]=mky;
					}
					else if(mgrav==1){
						turn++;
						ha[turn]='g';
						techg[0]++;
						mgrav=0;
						printf("중력반전을 설치할 좌표를 입력해주세요.\n(떨어지는 중엔 중력이 바뀌지 않습니다.)\n=> ");
						scanf("%d %d",&mkx,&mky);
						gx[techg[0]-1]=mkx*2;
						gy[techg[0]-1]=mky;
					}
					else if(undo==1){
						undo=0;
						if(turn>=1){
							if(ha[turn]=='t'){ obx[tech[0]-1]=0; oby[tech[0]-1]=0; tech[0]--;}
							else if(ha[turn]=='b'){ blx[techb[0]-1]=0; bly[techb[0]-1]=0; techb[0]--;}
							else if(ha[turn]=='f'){ fx[techf[0]-1]=0; fy[techf[0]-1]=0; techf[0]--;}
							else if(ha[turn]=='i'){ itx[techi[0]-1]=0; ity[techi[0]-1]=0; techi[0]--;}
							else if(ha[turn]=='g'){ gx[techg[0]-1]=0; gy[techg[0]-1]=0; techg[0]--;}
							turn--;
						}
					} 
					system("cls");
					for(int i=0;i<techb[lv-1];i++){
						gotoxy(blx[i],bly[i]);
						printf("□");
					}
					for(int i=0;i<tech[lv-1];i++){
						gotoxy(obx[i],oby[i]);
						printf("△");
					}
					for(int i=0;i<techf[lv-1];i++){  
						gotoxy(fx[i],fy[i]);
						printf("▣");
					} 
					for(int i=0;i<techi[lv-1];i++){  
						gotoxy(itx[i],ity[i]);
						printf("◎");
					} 
					for(int i=0;i<techg[lv-1];i++){  
						gotoxy(gx[i],gy[i]);
						printf("◇");
					} 
				}
			}
		}
		system("cls");
		gotoxy(px,py);
		printf("■");
		gotoxy(20,0);
		if(make==0) printf("level %d",lv); 
		gotoxy(0,0);
		if(prac!=1){
			printf("%.1f sec",t);
		}
		else if(prac==1 && make!=1) printf("Practice mode");
		else printf("Test mode");
		if(make!=1){
			if(lv==2){
				if(lv2!=1){
					for(int i=0;i<techb[lv-1];i++){
						blx[i]=bl1x[i];
						bly[i]=bl1y[i];
					}
					for(int i=0;i<tech[lv-1];i++){
						obx[i]=ob1x[i];
						oby[i]=ob1y[i];
					}
					for(int i=0;i<techf[lv-1];i++){
						fx[i]=f1x[i];
						fy[i]=f1y[i];
					}
					lv2=1;
				}
			}
			else if(lv==3){
				if(lv3!=1){
					for(int i=0;i<techb[lv-1];i++){
						blx[i]=bl2x[i];
						bly[i]=bl2y[i];
					}
					for(int i=0;i<tech[lv-1];i++){
						obx[i]=ob2x[i];
						oby[i]=ob2y[i];
					}
					for(int i=0;i<techf[lv-1];i++){
						fx[i]=f2x[i];
						fy[i]=f2y[i];
					}
					lv3=1;
					px=0;
					py=23;
				}
			}
		}
		if(j==1){
			j=0;
			for(int t=0;t<=4;t++){   
				if(grav==0) py=my-round(-1*(t-2)*(t-2)+4);
				else py=my+round(-1*(t-2)*(t-2)+4);
				if(kbhit()){
					c=getch();
					switch(c){
						case 'd': if(px!=48) px+=2; break;
						case 'a': if(px!=0) px-=2; break;
						case 'b': det=1; break;
						default: break;
					}
				}
				if(det==1){
					det=0;
					if(pau==0) pau=1;
				}
				if(pau==1){
					system("cls");
					gotoxy(20,12);
					printf("Paused");
					gotoxy(11,14);
					printf("[Press B again to begin]");
					while(detch!='b'){
						if(kbhit()) detch=getch();
					}
					detch='l';
					pau=0;
					c='l';
				}
				for(int i=0;i<tech[lv-1];i++){
					if(px==obx[i]){
						if(py==oby[i]){
							Sleep(50);
							res=2;
							break;
						}
					}
				}
				for(int i=0;i<techb[lv-1];i++){
					if(grav==0){
						if(py<=bly[i]){
							if(px==blx[i]){
								if(bly[i]<my || 1>my){
									cn=1;
									cy=py;
									break;
								}
							}
						}
					}
					else{
						if(py>=bly[i]){
							if(px==blx[i]){
								if(bly[i]>my || 23<my){
									cn=1;
									cy=py;
									break;
								}
							}
						}
					}
				}
				for(int i=0;i<techf[lv-1];i++){
					if(grav==0){
						if(py<=fy[i]){
							if(px==fx[i]){
								if(fy[i]<my){
									cn=1;
									cy=py;
									break;
								}
							}
						}
					}
					else{
						if(py>=fy[i]){
							if(px==fx[i]){
								if(fy[i]>my){
									cn=1;
									cy=py;
									break;
								}
							}
						}
					}
				}
				for(int i=0;i<techg[lv-1];i++){   
					if(px==gx[i]){
						if(abs(py-gy[i])<=1){
							Sleep(50);
							gc=1;
							break;
						}
					}
				}  
				if(gc==1){
					gc=0;
					if(grav==0) { grav=1; }
					else { grav=0; }
					gb=1;
				}
				if(cn==1){
					if(t<=2){
						t=4-t;
						cn=0;
					}
					else break;
				}
				for(int i=eat;i<techi[lv-1];i++){
					if(px==itx[i]){
						if(py==ity[i]){
							eat++;
							jcs=1;
							break;
						}
					}
				}
				if(gb==1){gb=0; break;}
				if(jcs==1) break;
				if(res==2) break;
				system("cls");
				gotoxy(px,py);
				printf("■");
				Sleep(100);
			}
		}  
		my=py;
		if(kbhit()){  
			c=getch();
			switch(c){
				case ' ': j=1; break;
				case 'd': if(px!=48) px+=2; break;
				case 'a': if(px!=0) px-=2; break;
				case 'b': det=1; break;
				case 'g': g=0; break;
				default: break;
			}
		} 
		if(det==1){
			det=0;
			if(pau==0) pau=1;
		}
		if(pau==1){
			system("cls");
			gotoxy(20,12);
			printf("Paused");
			gotoxy(11,14);
			printf("[Press B again to begin]");
			while(detch!='b'){
				if(kbhit()) detch=getch();
			}
			detch='l';
			pau=0;
			c='l';
		}
		for(int i=0;i<tech[lv-1];i++){  
			gotoxy(obx[i],oby[i]);
			printf("△");
		} 
		for(int i=0;i<tech[lv-1];i++){   
			if(px==obx[i]){
				if(py==oby[i]){
					Sleep(50);
					res=2;
					break;
				}
			}
		} 
		for(int i=0;i<techb[lv-1];i++){
			gotoxy(blx[i],bly[i]);
			printf("□");
		}
		for(int i=0;i<techf[lv-1];i++){  
			gotoxy(fx[i],fy[i]);
			printf("▣");
		} 
		for(int i=0;i<techb[lv-1];i++){
			if(px==fx[i] && py+1==fy[i]){
				if(make!=1){
					lv++;
					if(lv==4){
						lv--;
						com++;
						break;
					}
					px=24;
					py=23;
					break;
				}
				else{g=0; poss=1; break;}
			}
		}
		for(int i=eat;i<techi[lv-1];i++){
			gotoxy(itx[i],ity[i]);
			printf("◎");
		} 
		for(int i=eat;i<techi[lv-1];i++){
			if(px==itx[i]){
				if(py==ity[i]){
					eat++;
					j=1;
					break;
				}
			}
		}
		for(int i=0;i<techg[lv-1];i++){  
			gotoxy(gx[i],gy[i]);
			printf("◇");
		} 
		for(int i=0;i<techg[lv-1];i++){   
			if(px==gx[i]){
				if(py==gy[i]){
					Sleep(50);
					gc=1;
					break;
				}
			}
		}  
		if(gc==1){
			gc=0;
			if(grav==0) grav=1;
			else grav=0;
		}
		if(grav==0){
			for(int i=0;i<techb[lv-1];i++){
				if((px==blx[i] && py+1==bly[i])!=1 && my<23){
					d+=1;
				}
			}
		}
		else{
			for(int i=0;i<techb[lv-1];i++){
				if((px==blx[i] && py-1==bly[i])!=1 && my>1){
					d+=1;
				}
			}
		}
		if(d==techb[lv-1] && jcs!=1){
			fturn=0;
			if(grav==0){
				while(py<23){
					for(int i=0;i<techb[lv-1];i++){
						if((px==blx[i] && py+1==bly[i])==1){
							tg=1;
							break;
						}
					}
					if(tg==1) break;
					if(kbhit()){
						c=getch();
						switch(c){
							case 'a': px-=2; break;
							case 'd': px+=2; break;
							case 'b': det=1;
							default: break;
						}
					}
					if(det==1){
						det=0;
						if(pau==0) pau=1;
					}
					if(pau==1){
						system("cls");
						gotoxy(20,12);
						printf("Paused");
						gotoxy(11,14);
						printf("[Press B again to begin]");
						while(detch!='b'){
							if(kbhit()) detch=getch();
						}
						detch='l';
						pau=0;
						c='l';
					}
					py++;
					system("cls");
					gotoxy(px,py);
					printf("■");
					Sleep(100);
				}
			}
			else{
				while(py>1){
					fturn++;
					for(int i=0;i<techb[lv-1];i++){
						if((px==blx[i] && py-1==bly[i])==1){
							tg=1;
							break;
						}
					}
					if(tg==1) break;
					if(kbhit()){
						c=getch();
						switch(c){
							case 'a': px-=2; break;
							case 'd': px+=2; break;
							case 'b': det=1;
							default: break;
						}
					}
					if(det==1){
						det=0;
						if(pau==0) pau=1;
					}
					if(pau==1){
						system("cls");
						gotoxy(20,12);
						printf("Paused");
						gotoxy(11,14);
						printf("[Press B again to begin]");
						while(detch!='b'){
							if(kbhit()) detch=getch();
						}
						detch='l';
						pau=0;
						c='l';
					}
					py--;
					system("cls");
					gotoxy(px,py);
					printf("■");
					Sleep(100);
				}
			}
		}
		if(jcs==1) {jcs=0; j=1;}
		if(com==1) break;
		tg=0;
		d=0;
		t+=0.1;
		if(res==2){
			if(prac==0) break;
			else{
				if(lv==3){
					px=0;
					py=23;
				}
				else{
					px=24;
					py=23;
				}
				eat=0;
				res=0;
			}
		}
		Sleep(100);
	}
	system("cls");
	gotoxy(17,12);
	if(res==2) printf("Game Over");
	else{
		if(prac==0){
			system("color 70");
			printf("Game Completed!");
		}
		else{
			gotoxy(14,12);
			printf("Practicing Finished!");
		}
		gotoxy(14,14);
		printf("time used: %.1f sec",t);
	}
	gotoxy(0,0);
	scanf("%c",&vol);
}
